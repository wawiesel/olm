name: Auto Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted]
  check_suite:
    types: [completed]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.draft == false &&
      github.event.pull_request.mergeable == true
    steps:
      - name: Check if PR is ready for auto-merge
        id: check-ready
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request?.number || context.payload.number
            });
            
            // Get required status checks
            const { data: branch } = await github.rest.repos.getBranch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: pr.base.ref
            });
            
            const requiredChecks = branch.protection?.required_status_checks?.contexts || [];
            
            // Get PR reviews
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            
            // Check if there's at least one approved review
            const approvedReviews = reviews.filter(review => 
              review.state === 'APPROVED' && 
              review.user.login !== pr.user.login // Not self-approved
            );
            
            // Get check runs
            const { data: checkRuns } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha
            });
            
            // Check if all required checks are passing
            const allChecksPassing = checkRuns.check_runs.every(check => 
              check.status === 'completed' && check.conclusion === 'success'
            );
            
            // Conditions for auto-merge:
            // 1. At least one approved review
            // 2. All checks are passing  
            // 3. No changes requested
            // 4. Not a draft PR
            const hasRequestedChanges = reviews.some(review => review.state === 'CHANGES_REQUESTED');
            
            const readyToMerge = approvedReviews.length > 0 && 
                               allChecksPassing && 
                               !hasRequestedChanges &&
                               !pr.draft;
            
            console.log(`Auto-merge conditions:`);
            console.log(`- Approved reviews: ${approvedReviews.length}`);
            console.log(`- All checks passing: ${allChecksPassing}`);
            console.log(`- No changes requested: ${!hasRequestedChanges}`);
            console.log(`- Not draft: ${!pr.draft}`);
            console.log(`- Ready to merge: ${readyToMerge}`);
            
            return readyToMerge;

      - name: Enable auto-merge
        if: steps.check-ready.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request?.number || context.payload.number;
            
            await github.rest.pulls.enableAutoMerge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'squash'  // Use squash merge as per project preference
            });
            
            console.log(`Auto-merge enabled for PR #${prNumber}`);
            
      - name: Add auto-merge comment
        if: steps.check-ready.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request?.number || context.payload.number;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: 'ðŸ¤– **Auto-merge enabled!** This PR will be automatically merged when all conditions are met:\n\nâœ… At least one approved review\nâœ… All status checks passing\nâœ… No changes requested\nâœ… Not a draft PR\n\nUsing squash merge to maintain clean commit history.'
            }); 